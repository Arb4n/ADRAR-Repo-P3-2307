QA




Variable : 

Le fait de se servir d'une variable est 
gÃ©nÃ©ralement appelÃ© "utilisation" ou "accÃ¨s" 
Ã  une variable. Lorsque vous utilisez une variable 
dans votre code, vous l'appelez par son nom 
afin d'accÃ©der Ã  sa valeur et de l'utiliser 
dans des opÃ©rations, des calculs ou d'autres 
manipulations. L'utilisation d'une variable 
peut inclure la lecture de sa valeur, 
la modification de sa valeur ou l'utilisation 
de sa valeur dans des expressions 
ou des instructions.






Fonction : 


boucle : permet de rÃ©pÃ©ter. 
Normalement, une ligne de code , 
Ã§a se lit de haut en bas et ? 
Les deux types de boucle en js : 
boucle for et boucle while. 
for : on dÃ©finit les params de dÃ©part 
et d'arrivÃ©e et on sait ce qui va se passer,
et while = on connaÃ®t la condition p
our continuer, mais on ne sait pas combien de fois. 
Comment l'Ã©crire ? : 
for (let etc. 
while 


If : 
vÃ©rifie si une condition est vraie 
et else s'exÃ©cute si if est faux. 
PrÃ©cision : si jamais le else est vide, 
on peut le suppr. 
Si on n'a pas de else, on peut l'enlever. 

Un autre opÃ©rateur : 
modulo. 
C'est un opÃ©rateur qui permet de calculer une opÃ©ration. 




>> LESSON <<


LES TABLEAUX 

Qu'est-ce qu'on peut faire avec 
un tableau en js? 
Comment Ã§a s'utilise ? 

On va y stocker des valeurs. 
Une case d'un tableau = simil Ã  une variable. 
JUste, elle n'a pas son id. 
On y accÃ¨de d'une maniÃ¨re partic. 

!!! accolades = code. 
!!! crochet = tableau ! 

On utilise des crochets, donc, pour 
signifier la crÃ©ation d'un tableau. 


Les cases sont numÃ©rotÃ©es. Elles ont un ordre. 

PremiÃ¨re valeur = in case nÂ°0
En informatique, on compte Ã  partir 
de 0 pour des raisons techniques. 

On essaie d'accÃ©der aux cases du tableau, mais 
de maniÃ¨re individuelle. 

<
<
<
 On peut ainsi accÃ©der aux cases. 
 On peut y accÃ©der en lecture. 
 Cela se comporte comme un variable classique. 
 
 c>> ages.push(77); <<c : on entre une info 
 
 c>> ages.pop(); <<c : on suppr une info. 
 Par contre, cette fonction va nous retourner 
 une valeur. 
	Et qu'est-ce que Ã§a vaut ? 
	Ã§a vaut l'action supprimÃ©e . 
 
	Ainsi, si on met console.log(ages.pop()); 
	On va retrouver 19 dans la console. 
	ages.pop une deuxiÃ¨me fois a supprimÃ© une deuxiÃ¨me 
	valeur. 
	
Taille du tableau : 
	c>> ages.length <<c
!!! pas de parenthÃ¨ses, car pas une fonction, 
variable ! 
	
 
 
 ___________
 
 
 arr = nom assez gÃ©nÃ©rique pour un tableau 
 arr= array. 
 
 
 let arr = [ , , , , , ];
 <
< (5) = taille tu tableau dans console 
 <
 
 On peut voir ensuite tout ce qui 
 est mentionnÃ© dans chaque case, et la longueur
 du tableau. 
 
 !!! quand on fait console.log d'un tableau, 
 on n'a pas forcÃ©ment une transcription 
 exacte : en haut, version au moment oÃ¹ on 
 fait console.log; 
 en bas, dans la console,
 l'opÃ© au moment oÃ¹ on clique sur la flÃ¨che. 
 
 
 
 
 
 .?. 
 
 
 
 
 Les tableaux
// CrÃ©ation d'un tableau (que je stocke dans une variable)
let arr = [14, 25, 36, -1, 12.3456];

console.log(arr);

// AccÃ©der Ã  une case du tableau ; il me faut son numÃ©ro

// Par exemple, afficher dans la console le contenu de la case numÃ©ro 2 du tableau arr
console.log(arr[2]);
// Autre exemple, affecter 789 Ã  la case numÃ©ro 4 du tableau arr.
arr[4] = 789;

console.log(arr);

// Ajouter une nouvelle case Ã  la fin
arr.push(-3);
console.log(arr);

// Supprimer la derniÃ¨re case du tableau
arr.pop();
console.log(arr);
// La fonction retourne une valeur : celle qui Ã©tait dans la case qui vient d'Ãªtre supprimÃ©e.
console.log(arr.pop());
let save = arr.pop();
console.log("Je viens de supprimer la derniÃ¨re case, elle contenait", save);
console.log(arr);

// Taille du tableau (nombre de cases)
arr.length
// Pour l'afficher dans la console
console.log("Le tableau contient", arr.length, "cases.");
// Pour la stocker dans une variable
let size = arr.length;
console.log("La variable size contient", size);

Envoyer un message dans #ðŸ§®-algo


<
<
 
Qu'est-ce que Ã§a fait si on l'utilise ? 
cela vient modif le tableau pour suppr 
la der case. 
Et le 23 qu'il y a, elle le rÃ©cup :
suppression, mais le donne en sortie de la fonction .

Et quand on Ã©crit console.log (arr.pop()); ,
on voit qu'on a un rÃ©sultat : tout cette 
partie vaut 23 
!!! c'est pourquoi = important
sÃ©parer pt de vue inter et exter. 
 
<
<
 
On est obligÃ© d'appeler variable par variable ? 
Nop. 
On peut se servir d'un tableau lala â™«

Un part un ? DeuxiÃ¨me mÃ©thode. 

Mais on peut aussi appeler une boucle ! 
3Ã¨me. 

boucle for. 
chaque numÃ©ro/valeur correspondra 
Ã  chaque case du tableau! 

<
<


Et lÃ , on peut faire varier 
le nombre de donnÃ©es par la taille du tableau. 
automatiser des variables qui sont soeurs. 
>> ages.length 


 
<
<

ex8 
for (let i = 0 ; i < tab1.length ; i++ { 
!!! bon numÃ©ro, pour Ã©viter les erreurs !!! 

<
<
<
<

Correc exs 9 =<

exo 13
.reduce : operation sur chaque case du tab1charcode = transpose
un nombre en charactere
cf. table ASCI

on peut meme voir a droite le binaire qui correspond





>>> TABLEAUX2 <<<

<
<

	N!!! Rien qu'en voyant le nom de la fonction, 
on doit savoir ce que fait la fonction  : 'f' c'est pourri.
Elle donne le dernier Ã©lÃ©ment d'un tableau : 
* displayLast*   *.*

Alors, sans fonction, dÃ©jÃ  : < 

<
Comment on enregistre un tableau, une valeur ? !!! VARIABLE !!!!!


<
<


COding up : s'organise Ã  Poitiers 
Tous les ans. 
But: rÃ©unir des jeunes, des lycÃ©ens etc. pour 
rÃ©soudre quelques exercices. 
